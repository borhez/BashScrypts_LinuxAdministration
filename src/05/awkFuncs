#!/bin/bash

nFiles=5

trap "echo -e 'Not all Logs in ../04/.\nExit Error'; exit 1" TERM
ftCheckExistingFiles()
{
	local ret=""
	for (( i=1; i<=$nFiles; i++ ))
	do
		if [[ ! -f "../04/log$i.txt" ]]
		then kill -s TERM $$
		fi
		ret=$ret" ../04/log$i.txt"
	done
	echo $ret
}

ftSortByCode()
{
	awk 'NR' ${FilesForAwk} | sort -t $' ' -k6
	#-t $'\t' задаст разделитель полей как tab.
	#По умолчанию пробел. --> можно не указывать -t $' '
	#-k6,6 для сортировки из столбца 6 в столбец 6. Также при -k6.
	#-k1n будет означать числовую сортировку по первому столбцу
	#по умолчанию порядок возрастания. -k6r -k6,6r -k1nr для убывания
}

ftUniqIP()
{
#HTTP requests containing the same IP, the same date, and the same user agent are considered a unique visitor. By default, it includes web crawlers/spiders.

#---------------------SORT/UNIQ:----------

        #Sort и uniq выводят уникальные IP, но отсортированные!
        #awk '{print $1}' ${FilesForAwk}| sort -u
        #awk '{print $1}' ${FilesForAwk}|sort| uniq -c
        #-c для каждого уникального IP покажет количество дубликатов

#-----------------associative massive awk:

	awk '
	{
	    if (!($1 in a)) 
	        a[$1] = $1;
      	}
	END { 
	    for (i in a) 
	       print a[i]
        }' $FilesForAwk


        # 'a' это массив., индексируется строкой $1 (=IP)
        #Идём по всем строкам, смотрим первый столбец $1 он же ip.
        #Если в 'а' не существует элемента, индексируемого строкой $1 (IP),
        #то в элемент a[$1], т.е. в элемент, индексируемый строкой
        #равной текущему рассматриваемому ip (столбцу $1), мы
        #записываем этот ip; a[$1] = $1.
        #После обработки всех строк, элементы массива - уникальные ip;
        #Распечатаем их:  END {for (i in a) print a[i]}' 
}

ftErrorRequests()
{
	awk '($9 ~ /^5|4/) {printf"%s %s %s %s %s \n", $1, $6, $7, $8, $9}' $FilesForAwk

	#с добавлением user_agent:
	# awk '
	##	($9 ~ /^5|4/)
	#	{printf"%s %s %s %s %s ", $1, $6, $7, $8, $9}
	#	{ s = ""; for (i = 12; i <= NF; i++)  s = s $i " "; print s}
	#     ' $FilesForAwk
	
	#вся строка из лога:
	#awk '($9 ~ /^5|4/) {print $0}' $FilesForAwk
}

ftUniqIPinErrorRequests()
{
	ftErrorRequests | awk '{ if (!($1 in a)) a[$1] = $1;} END { for (i in a) print a[i]}'
}
