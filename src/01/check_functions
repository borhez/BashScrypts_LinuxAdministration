#!/usr/bin/bash

  check_number_of_args() {
  if [ "$must_n" -ne "$n_inParams" ]
	then echo -e "Error!\nMust be $must_n parameters"
	     echo -e "abs_way; n_dirs; d_letters; n_files; f_letters(7).ext(3); file_size(<=100kb)"
 	exit 1
  fi
}

 remove_slash_in_the_end()
 {
	# удалит только с дконца. в середине останутся
 	local len=${#abs_way}
 	 local last_elem=${abs_way:$len-1:1}
 	 local suffix="/"
  
	while true
	do
		   if [ "$last_elem" != "$suffix" ]
		   then 
		   	break
		   fi
	
		   abs_way=${abs_way%"$suffix"}
		   len=${#abs_way}
		   last_elem=${abs_way:$len-1:1}  
	done  

#--------this method removes all doubleslashes--BUT WRONG!!!
#   если "~/src//01/testfolder" then abs_way="~/src01/testfolder;
#   local substr="//"
#  while true
#   do
#	if [[ $abs_way == *$substr* ]] ; then
# 		abs_way=$(echo "$abs_way"|sed -e "s@$substr@@")
#	#Если подстрока найдена, то она удаляется. Иначе break
#	else break
#  	fi
 #  done
 }

  check_absolute_way() {
  if [ ! -d $abs_way ]
	  then echo "Wrong absolute way!"
	  exit 1
  fi
  cd $abs_way; abs_way=$(pwd); cd -
  remove_slash_in_the_end
}

  is_nbr() {
   re='^[0-9]+$'
   if ! [[ $1 =~ $re ]]
       then return 100
   fi
   return 0;
  }

  check_nbr_dirs_and_files() {
   if [[ "$n_dirs" -eq 0 || "$n_files" -eq 0 ]]
       then echo "The number of files or directories must be > 0"
          exit 1
   fi

   is_nbr $n_dirs
   if [ $? -eq 100 ]
      then echo "Wrong directories-number!" ; exit 1
   fi

   is_nbr $n_files
   if [ $? -eq 100 ]
      then echo "Wrong files-number!" ; exit 1
   fi
  }

check_letters() {
  re='^[a-z]+$'
  if ! [[ $d_letters =~ $re ]]
      then echo "Wrong letters for directories!" ; exit 1
  fi
 
  re='^[a-z]+([.][a-z]+)$'
  if ! [[ $f_letters =~ $re ]]
      then echo "Wrong letters for files" ; exit 1
  fi

  l_letters_d=${#d_letters}

 #split f_letters by "."  Find letters for file-names:
 # IFS='.' read -ra letters_f_name <<< "$f_letters"
 	#echo $letters_f_name
 # local size_f_name=${#letters_f_name}

  local delimitter="."
  letters_f_name=${f_letters%$delimitter*}
  	#echo $letters_f_name
  l_letters_f_name=${#letters_f_name}
  
#split f_letters by "." Find letters for file-extensions
  letters_f_ext=${f_letters##*$delimitter}
  	#echo $letters_f_ext
  l_letters_f_ext=${#letters_f_ext}

  if [[ $l_letters_d -gt 7 || $l_letters_f_name -gt 7 ]]
     then echo "List of letters must be not great than 7"; exit 1
  fi

  if [ $l_letters_f_ext -gt 3 ]
     then echo "List of letters for extension must be not great than 3"
     exit 1
  fi
}

 check_size_param()
 {
    local suffix="kb"
    file_size=${file_size%"$suffix"}
    re='^[0-9]+$'
    if ! [[ $file_size =~ $re ]]
        then echo "Wrong format for size of files"; exit 1
    fi

    if [[ $file_size -gt 100 ]] ; then
	echo "Wrong size. Must be <= 100kb"; exit 1
    fi	
}

  check_args() {
   check_number_of_args
   check_absolute_way
   check_nbr_dirs_and_files
   check_letters
   check_size_param
}

check_1Gb_freespace() 
{
	freespace=$( df | grep /dev/sda3 | awk '{print($4)}' )
	#gigabyte=1048576 kb
	#for testing: let needed=$freespace+1
	let needed=1048576+$file_size
	if [ $freespace -lt $needed ]
		then echo "when creating the next file, there will be less than 1 GB of free space."; exit 1
	fi
}
