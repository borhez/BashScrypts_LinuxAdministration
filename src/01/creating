generate()
{
  local letters=$1
  local l_arr_letters=${#letters}
  local ret
  local times
  local new_char
  local in_str=$1
  local len_ret

  for ((g=0; g < l_arr_letters; g++))
  do
  	let "how_many=1+$RANDOM % 3"
	for ((times=0; times < how_many; times++))
	do
		new_char=${in_str:$g:1}
		ret=$ret$new_char
	done
  done

  len_ret=${#ret}
  for (( ; len_ret < 4; ))
  do
	let "how_many=1+$RANDOM % 3"
	for ((times=0; times < how_many; times++))
	do
	  	new_char=${in_str:$g-1:1}
		ret=$ret$new_char
	done
	len_ret=${#ret}
  done
  echo $ret
}

create_newfile()
{
  new_fName=$(generate $letters_f_name)
  newfExt=$(generate $letters_f_ext)
  newFile=${new_fName}_${add_date}.${newfExt}
  
  fallocate -l ${file_size}K ${abs_way}/${new_dName}/${newFile}
  if [[ $? -ne 0 ]]
  	then echo "Error when creating file"; erxit 1
  fi
}

create_newfolder()
{
	new_dName=$(generate $d_letters)
	new_dName=${new_dName}_${add_date}
	
	#cd $abs_way
	mkdir -p ${abs_way}/${new_dName}
	#cd -
	
	if [ $? -ne 0 ]
	then echo "Error when creating folder" ; exit 1
	fi
}

update_log()
{
   echo updateLog
}
